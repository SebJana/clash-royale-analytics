
services:
  mongo:
    image: mongo:7.0
    container_name: mongo
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      # TODO: Change to named volume for better performance and portability
      # - mongo_data:/data/db
      - ./db/data:/data/db
      - ./db/mongo-init/:/docker-entrypoint-initdb.d:ro
    networks:
      - cr-analytics

  mongo-backup:
    build: ./db/backup
    container_name: mongo-backup
    restart: unless-stopped
    depends_on:
      - mongo
    env_file:
      - .env
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_AUTH_DB: ${MONGO_APP_DB}
    volumes:
      - ./db/backups:/backups
    networks:
      - cr-analytics

  data_scraper:
    build:
      context: ./backend/
      dockerfile: data_scraper/Dockerfile
    container_name: data_scraper
    depends_on:
      - mongo
    env_file:
      - .env
    networks:
      - cr-analytics
    restart: unless-stopped

  redis:
    image: redis:8.0-alpine
    # upon hitting max memory, delete least recently used elements
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 1gb           
      --maxmemory-policy allkeys-lru 
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - cr-analytics

  api:
    build:
      context: ./backend/
      dockerfile: app/Dockerfile
    container_name: api
    depends_on:
      - mongo
      - redis
    env_file:
      - .env
    networks:
      - cr-analytics
    ports:
      - "8000:8000"
    restart: unless-stopped

volumes:
  # TODO: Uncomment when switching from bind mount to named volume
  # mongo_data:
  redis-data:

networks:
  cr-analytics:
    driver: bridge
